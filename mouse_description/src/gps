#!/usr/bin/env python3
import rospy
import tf_conversions

import numpy as np

from mouse_description.msg import GPSData
from gazebo_msgs.srv import GetModelState

def modpi(ang):
	while (ang > np.pi):
		ang -= 2 * np.pi
	while (ang < -np.pi):
		ang += 2 * np.pi
	return ang

def main():
	# TODO make an actual GPS instead of perfection

	model = rospy.get_namespace()[1:-1]
	srv = rospy.ServiceProxy('/gazebo/get_model_state', GetModelState)
	msg = GPSData()
	pub = rospy.Publisher(rospy.get_namespace() + 'gps_data', GPSData, queue_size=10)

	r = rospy.Rate(30)
	while not rospy.is_shutdown():
		pos = srv(model, 'world')
		msg.x = pos.pose.position.x
		msg.y = pos.pose.position.y
		msg.ang = tf_conversions.transformations.euler_from_quaternion(
			[pos.pose.orientation.x, pos.pose.orientation.y, 
			pos.pose.orientation.z, pos.pose.orientation.w])[2]
		msg.ang = modpi(msg.ang + np.pi/2)
		pub.publish(msg)
		r.sleep()

if __name__ == '__main__':
	rospy.init_node('gps')
	try:
		main()
	except rospy.ROSInterruptException:
		pass